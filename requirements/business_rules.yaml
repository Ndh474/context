# Business Rules Specification
# FUACS Requirements - Version 1.0

metadata:
  total_business_rules: 37
  domains_covered:
    [
      Authentication,
      Roles,
      Identity,
      Academic,
      Attendance,
      System,
      Audit,
      Infrastructure,
    ]
  last_updated: "2024-10-19"

business_rules:
  # Authentication & User Management (BR-01 to BR-07)
  authentication:
    BR-01:
      title: "Primary Login Identifier"
      description: "The primary login identifier username for a user must be their Student ID (for Students) or Staff ID (for Staff)."
      domain: "Authentication"
      priority: "High"
      related_use_cases: ["UC-01", "UC-34"]
      validation_points: ["User creation", "Login process"]

    BR-02:
      title: "Google Login Email Lookup"
      description: "When a user logs in via Google, the system must use the email address provided by Google to look up the corresponding user account."
      domain: "Authentication"
      priority: "High"
      related_use_cases: ["UC-01"]
      validation_points: ["Google OAuth callback"]

    BR-03:
      title: "Inactive Account Access Denial"
      description: "If a user account is found but is inactive (is_active = false), access must be denied."
      domain: "Authentication"
      priority: "High"
      related_use_cases: ["UC-01", "UC-38"]
      validation_points: ["Login process", "Account status check"]

    BR-04:
      title: "Unique Username and Email"
      description: "Each username and email must be unique across the entire system."
      domain: "Authentication"
      priority: "High"
      related_use_cases: ["UC-01", "UC-34"]
      validation_points: ["User creation", "User update"]

    BR-05:
      title: "Role Assignment Constraints"
      description: "A user with the STUDENT role cannot be concurrently assigned the LECTURER or SUPERVISOR role."
      domain: "Roles"
      priority: "High"
      related_use_cases: ["UC-34", "UC-37"]
      validation_points: ["Role assignment", "Role update"]

    BR-06:
      title: "Password Reset Token Security"
      description: "A password reset token must be unique, have an expiration time, and must be invalidated immediately after successful use."
      domain: "Authentication"
      priority: "High"
      related_use_cases: ["UC-04", "UC-05"]
      validation_points:
        ["Token generation", "Token validation", "Password reset"]

    BR-07:
      title: "User Profile Requirement"
      description: "A new user account must be linked to a specialized profile (student_profiles or staff_profiles) to define its specific attributes."
      domain: "User Management"
      priority: "High"
      related_use_cases: ["UC-34"]
      validation_points: ["User creation workflow"]

  # Identity Management (BR-08 to BR-11)
  identity_management:
    BR-08:
      title: "Initial Identity Registration Requirements"
      description: "A student's identity registration request (both initial and update) must include a static face photo and a short face video."
      domain: "Identity"
      priority: "High"
      related_use_cases: ["UC-12", "UC-13"]
      validation_points: ["Identity submission creation"]

    BR-09:
      title: "Manual Identity Approval"
      description: "All identity registration or update requests must be manually approved by a user with the appropriate permissions (e.g., IDENTITY_SUBMISSION_APPROVE)."
      domain: "Identity"
      priority: "High"
      related_use_cases: ["UC-12", "UC-13", "UC-39", "UC-40", "UC-41"]
      validation_points: ["Identity submission workflow"]

    BR-10:
      title: "Pending Identity Update Handling"
      description: "While an identity update request is pending approval, the system must continue to use the previously approved identity data for attendance checking."
      domain: "Identity"
      priority: "Medium"
      related_use_cases: ["UC-13"]
      validation_points:
        ["Face recognition process", "Identity update workflow"]

    BR-11:
      title: "Identity Rejection Notification"
      description: "When an identity submission is rejected, the system must automatically send a system notification to the student, stating the reason for rejection."
      domain: "Identity"
      priority: "Medium"
      related_use_cases: ["UC-11", "UC-41"]
      validation_points: ["Identity rejection workflow"]

  # Academic Catalog (BR-12 to BR-17)
  academic_catalog:
    BR-12:
      title: "Unique Academic Identifiers"
      description: "Each Major, Subject, and Class must have a unique identifier (code or name)."
      domain: "Academic"
      priority: "High"
      related_use_cases: ["UC-42", "UC-46", "UC-50", "UC-54", "UC-58", "UC-62"]
      validation_points: ["Academic entity creation", "Academic entity update"]

    BR-13:
      title: "Single Class Enrollment"
      description: "A student can only be enrolled in a specific class once."
      domain: "Academic"
      priority: "High"
      related_use_cases: ["UC-62"]
      validation_points: ["Student enrollment"]

    BR-14:
      title: "Enrollment History Preservation"
      description: "When a student is unenrolled from a class (enrollments.is_enrolled = false), they must not appear in the roster for future slots of that class, but their past attendance history must be preserved."
      domain: "Academic"
      priority: "Medium"
      related_use_cases: ["UC-63"]
      validation_points:
        [
          "Student unenrollment",
          "Roster generation",
          "Attendance history queries",
        ]

    BR-15:
      title: "Slot Room Assignment"
      description: "Each lecture/exam slot must be associated with a specific slot category and room."
      domain: "Academic"
      priority: "High"
      related_use_cases: ["UC-24", "UC-58", "UC-60"]
      validation_points: ["Slot creation", "Slot update"]

    BR-16:
      title: "Camera Room Validation"
      description: "All active cameras in the slot's assigned room are automatically used for attendance monitoring. No manual camera selection is required."
      domain: "Infrastructure"
      priority: "High"
      related_use_cases: ["UC-24", "UC-58", "UC-60"]
      validation_points: ["Slot creation", "Camera availability check"]

    BR-17:
      title: "Single Staff Assignment"
      description: "Each lecture/exam slot must be assigned to one and only one staff member (Lecturer or Supervisor) at a time."
      domain: "Academic"
      priority: "High"
      related_use_cases: ["UC-15", "UC-24", "UC-28", "UC-58", "UC-60"]
      validation_points: ["Slot creation", "Slot update", "Staff assignment"]

  # Attendance Management (BR-18 to BR-24)
  attendance_management:
    BR-18:
      title: "Attendance Session Authorization"
      description: "An automated attendance session can only be initiated by the staff member assigned to that slot who has the SLOT_SESSION_START permission."
      domain: "Attendance"
      priority: "High"
      related_use_cases: ["UC-15", "UC-28"]
      validation_points: ["Session initiation", "Permission check"]

    BR-19:
      title: "Face Recognition Status Update"
      description: "When a face is recognized, the system updates the student's attendance status to PRESENT. The final status and timestamp are recorded in the attendance record."
      domain: "Attendance"
      priority: "High"
      related_use_cases: ["UC-16", "UC-17", "UC-29"]
      validation_points: ["Face recognition processing", "Status update logic"]

    BR-20:
      title: "Unrecognized Face Handling"
      description: "If a face is not recognized, the system takes no action, and the student's attendance status remains unchanged during that scan."
      domain: "Attendance"
      priority: "Medium"
      related_use_cases: ["UC-16"]
      validation_points: ["Face recognition processing"]

    BR-21:
      title: "Finalization Rules Setup"
      description: "When finalizing a slot, the system must display a 'Finalization Rules Setup' screen. The lecturer must then make a bulk decision for each group of students with intermediate status (e.g., NOT_YET) to convert their final status to either PRESENT or ABSENT."
      domain: "Attendance"
      priority: "High"
      related_use_cases: ["UC-21", "UC-32"]
      validation_points: ["Slot finalization workflow"]

    BR-22:
      title: "Same-Day Edit Window"
      description: "The assigned Lecturer/Supervisor can manually edit the attendance results for a slot until 23:59:59 UTC on the day of the slot (based on slot.start_time date in UTC)."
      domain: "Attendance"
      priority: "Medium"
      related_use_cases: ["UC-19", "UC-30"]
      validation_points:
        ["Attendance edit authorization", "Time-based access control"]

    BR-23:
      title: "Post-Day Edit Restrictions"
      description: "After 23:59:59 UTC on the day of the slot (based on slot.start_time date in UTC), only a user with permissions such as ATTENDANCE_STATUS_UPDATE_MANUAL can edit the attendance results, typically a Data Operator."
      domain: "Attendance"
      priority: "Medium"
      related_use_cases: ["UC-19", "UC-30"]
      validation_points:
        ["Attendance edit authorization", "Time-based access control"]

    BR-24:
      title: "Unique Attendance Record"
      description: "An attendance record for a student in a specific slot must be unique."
      domain: "Attendance"
      priority: "High"
      related_use_cases: ["UC-15", "UC-16", "UC-28"]
      validation_points: ["Attendance record creation"]

  # System Administration (BR-25 to BR-27)
  system_administration:
    BR-25:
      title: "System Configuration Permissions"
      description: "Actions to modify core system configurations and manage role-permission mappings must be protected by distinct permissions (e.g., SYSTEM_CONFIG_UPDATE, ROLE_PERMISSION_MAPPING_UPDATE). By default, these permissions are granted only to the SYSTEM_ADMIN role."
      domain: "System"
      priority: "Critical"
      related_use_cases: ["UC-78", "UC-79", "UC-80", "UC-81", "UC-82", "UC-83"]
      validation_points:
        ["System configuration access", "Role-permission management"]

    BR-26:
      title: "User Management Permissions"
      description: "User account management (creating, updating, assigning roles, etc.) must be controlled by a granular set of permissions (e.g., USER_CREATE, USER_UPDATE_STATUS, USER_ASSIGN_ROLES). By default, these permissions are granted to the DATA_OPERATOR role."
      domain: "User Management"
      priority: "High"
      related_use_cases: ["UC-34", "UC-35", "UC-36", "UC-37", "UC-38"]
      validation_points: ["User management operations", "Permission validation"]

    BR-27:
      title: "Audit Trail Requirement"
      description: "Critical business data changes (e.g., finalizing attendance, updating student information) must be logged in the operational audit trail (operational_audit_logs)."
      domain: "Audit"
      priority: "High"
      related_use_cases:
        [
          "UC-21",
          "UC-25",
          "UC-32",
          "UC-36",
          "UC-37",
          "UC-38",
          "UC-40",
          "UC-41",
          "UC-44",
          "UC-45",
          "UC-48",
          "UC-49",
          "UC-52",
          "UC-53",
          "UC-56",
          "UC-57",
          "UC-60",
          "UC-61",
          "UC-63",
          "UC-66",
          "UC-67",
          "UC-70",
          "UC-71",
          "UC-76",
          "UC-79",
          "UC-83",
        ]
      validation_points: ["All critical data modifications"]

  # Attendance Data Integrity (BR-28 to BR-30)
  attendance_data_integrity:
    BR-28:
      title: "Manual Edit Remark Requirement"
      description: "Any manual edit of a student's attendance status requires a non-empty remark explaining the reason for the change. The system must prevent saving the change if the remark is empty."
      domain: "Attendance"
      priority: "High"
      related_use_cases: ["UC-19", "UC-20", "UC-30", "UC-31"]
      validation_points: ["Manual status update", "Remark validation"]

    BR-29:
      title: "Final Status Requirement"
      description: "After a slot is finalized, the primary status for all attendance records must be either PRESENT or ABSENT."
      domain: "Attendance"
      priority: "High"
      related_use_cases: ["UC-21", "UC-32"]
      validation_points: ["Slot finalization", "Status validation"]

    BR-30:
      title: "Hard Delete Dependency Check"
      description: "Any request to permanently delete a resource (e.g., Major, Semester, Room) must be rejected with a user-friendly error message if the resource has dependent child resources (e.g., Subjects, Classes, Cameras)."
      domain: "Data Integrity"
      priority: "Critical"
      related_use_cases:
        ["UC-45", "UC-49", "UC-53", "UC-57", "UC-61", "UC-67", "UC-71"]
      validation_points: ["All hard delete operations in the backend services"]

  # Attendance Status Management (BR-31 to BR-32)
  attendance_status_management:
    BR-31:
      title: "Attendance Status Transition Rules"
      description: "Defines valid state transitions for attendance records and time-based edit restrictions. Before finalization, all transitions are allowed. After finalization, assigned staff can edit until 23:59:59 UTC of the slot date. After that, only Data Operators can edit."
      domain: "Attendance"
      priority: "High"
      related_use_cases: ["UC-19", "UC-21", "UC-30", "UC-32"]
      validation_points:
        [
          "Attendance edit API",
          "Permission middleware",
          "Time-based access control",
        ]
      rules:
        valid_transitions:
          before_finalization:
            - "not_yet → present (auto or manual)"
            - "not_yet → absent (manual only)"
            - "present → absent (manual with remark)"
            - "absent → present (manual with remark)"
          after_finalization_same_day:
            - "All transitions allowed until 23:59:59 UTC of slot date"
            - "Must have ATTENDANCE_STATUS_UPDATE_MANUAL permission"
            - "Remark is mandatory for all manual changes"
          after_finalization_next_day:
            - "Lecturer/Supervisor: NO edit permission"
            - "Data Operator: Can edit with appropriate permissions"
            - "All changes must be logged in operational_audit_logs"
        time_boundary:
          calculation: "Based on slot.start_time date in server timezone (UTC)"
          cutoff: "23:59:59 UTC of the slot date"
          example: "If slot starts 2024-10-19 14:00 UTC, edit window closes 2024-10-19 23:59:59 UTC"

    BR-32:
      title: "Face Embedding Version Management"
      description: "Rules for managing face embedding versions when identity is updated. Each approved identity submission generates a new embedding with incremented version. Only one embedding per student can be active at a time."
      domain: "Identity"
      priority: "High"
      related_use_cases: ["UC-12", "UC-13", "UC-40"]
      validation_points:
        ["Identity approval workflow", "Face recognition query"]
      rules:
        version_increment:
          - "Each approved identity submission generates a new embedding with version = max(version) + 1"
          - "Initial registration: version = 1"
          - "First update: version = 2, etc."
        active_embedding:
          - "Only ONE embedding per student can have is_active = true"
          - "When new embedding is approved, old embedding is set to is_active = false"
          - "System uses only the active embedding for face recognition"
        retention_policy:
          - "Keep last 3 versions for audit and rollback purposes"
          - "Older versions can be archived or deleted after 1 year"

  # Academic Data Management (BR-33 to BR-34)
  academic_data_management:
    BR-33:
      title: "Enrollment Status and Roster Visibility"
      description: "When generating roster for a slot, only include students where enrollments.is_enrolled = true. Historical attendance records are preserved even after unenrollment."
      domain: "Academic"
      priority: "High"
      related_use_cases: ["UC-62", "UC-63"]
      validation_points:
        [
          "Roster query API",
          "Attendance record creation",
          "Student unenrollment workflow",
        ]
      rules:
        roster_generation:
          - "When generating roster for a slot, only include students where enrollments.is_enrolled = true"
          - "This applies to ALL slots, regardless of their status (upcoming, ongoing, finalized)"
        attendance_record_handling:
          - "If attendance_record already exists before unenrollment, it is preserved (not deleted)"
          - "Student will not appear in roster UI, but their historical record remains in database"
          - "Reports can still show historical attendance for unenrolled students"
        edge_case_handling:
          - "If student is unenrolled AFTER slot is finalized, their attendance record is preserved"
          - "If student is unenrolled BEFORE slot starts, no attendance record is created"

    BR-34:
      title: "Slot Category Logic and Attendance Type Mapping"
      description: "The 'slot_category' field determines the purpose of a slot and which attendance tables are used. This logic is enforced at the application layer."
      domain: "Academic"
      priority: "High"
      related_use_cases: ["UC-24", "UC-25", "UC-26", "UC-58", "UC-60"]
      validation_points: ["Slot creation API", "Slot update API", "Attendance processing logic"]
      rules:
        category_definitions:
          "LECTURE": "Regular lecture session. Uses 'attendance_records' only."
          "LECTURE_WITH_PT": "Lecture with a progress test. Uses both 'attendance_records' and 'exam_attendance'."
          "FINAL_EXAM": "Final exam session. Uses 'exam_attendance' only."
        permission_mapping:
          - "Data Operator can create/manage all categories."
          - "Lecturer can only update a slot's category between 'LECTURE' and 'LECTURE_WITH_PT', governed by BR-35."

    BR-35:
      title: "Lecturer Can Update Slot Category"
      description: "Lecturers can update slot_category between LECTURE and LECTURE_WITH_PT for their assigned slots, subject to certain constraints."
      domain: "Academic"
      priority: "High"
      related_use_cases: ["UC-24", "UC-25", "UC-26"]
      validation_points: ["Slot update API"]
      rules:
        can_update_category_if:
          - "Slot belongs to lecturer's assigned class"
          - "Slot has not been finalized yet"
          - "Current user has SLOT_UPDATE_CATEGORY permission"
          - "Update is between LECTURE and LECTURE_WITH_PT only"

        can_change_to_lecture_with_pt:
          - "Current slot_category is 'LECTURE'"
          - "All general conditions above are met"

        can_change_to_lecture:
          - "Current slot_category is 'LECTURE_WITH_PT'"
          - "No exam_attendance records exist for this slot"
          - "All general conditions above are met"

        cannot_update_if:
          - "Slot category is 'FINAL_EXAM' (only DOP can manage)"
          - "Trying to change to/from 'FINAL_EXAM'"
          - "Slot already finalized"
          - "Slot is in the past (after 23:59:59 UTC of slot date)"
          - "Exam attendance records exist (for LECTURE_WITH_PT → LECTURE)"

  # Time-Based Rules (BR-36)
  time_based_rules:
    BR-36:
      title: "Time-Based Edit Window Calculation"
      description: "Defines how the 23:59:59 cutoff time is calculated for attendance editing. All timestamps are in UTC, cutoff is based on slot start_time date."
      domain: "Attendance"
      priority: "High"
      related_use_cases: ["UC-19", "UC-21", "UC-30", "UC-32"]
      validation_points: ["Attendance edit API", "Permission middleware"]
      rules:
        timezone_standard:
          - "All timestamps stored in database are in UTC"
          - "Edit window cutoff is calculated based on slot.start_time date in UTC"
          - "UI displays times in user's local timezone for convenience"
        cutoff_calculation:
          - "Extract date from slot.start_time (in UTC)"
          - "Cutoff = {slot_date} 23:59:59 UTC"
          - "Example: slot starts 2024-10-19 14:00:00 UTC → cutoff is 2024-10-19 23:59:59 UTC"
        permission_check_logic:
          - "When user attempts to edit attendance:"
          - "1. Check if user is assigned staff (staff_user_id = current_user_id)"
          - "2. Check if current_time <= slot_date 23:59:59 UTC"
          - "3. If both true: allow edit"
          - "4. If time expired: check if user has DATA_OPERATOR role"
          - "5. If DATA_OPERATOR: allow edit, else deny"

  # Bulk Operations (BR-37)
  bulk_operations:
    BR-37:
      title: "Bulk Enrollment CSV Format and Validation"
      description: "Defines the CSV file format and validation rules for bulk student enrollment. File must be UTF-8 encoded with specific columns and validation rules."
      domain: "Academic"
      priority: "Medium"
      related_use_cases: ["UC-77"]
      validation_points: ["CSV upload API", "Bulk enrollment processing"]
      csv_format:
        encoding: "UTF-8 with BOM (for Excel compatibility)"
        delimiter: "comma (,)"
        header_row: "Required (first row)"
        columns:
          - name: "student_id"
            type: "string"
            required: true
            description: "Student's username (Student ID)"
          - name: "class_code"
            type: "string"
            required: true
            description: "Class code (not class_id)"
          - name: "semester_code"
            type: "string"
            required: true
            description: "Semester code to identify the class"
      validation_rules:
        file_level:
          - "File size must not exceed 5MB"
          - "Maximum 10,000 rows (excluding header)"
          - "Must have exactly 3 columns"
          - "Header row must match exactly: student_id,class_code,semester_code"
        row_level:
          - "student_id must exist in users table and have STUDENT role"
          - "class_code + semester_code must uniquely identify a class"
          - "Student must not already be enrolled in the class"
          - "Student must be active (users.is_active = true)"
          - "Class must be active (classes.is_active = true)"
        duplicate_handling:
          - "Within file: If same student_id + class_code appears multiple times, keep first occurrence and warn"
          - "With database: If enrollment already exists, skip and report as warning (not error)"
        error_reporting:
          - "Validation errors are collected and shown in UI before import"
          - "Import is all-or-nothing: if any validation fails, no records are created"

# Rule Dependencies and Relationships
rule_relationships:
  authentication_flow:
    primary_rules: ["BR-01", "BR-02", "BR-03", "BR-04"]
    description: "Rules governing user authentication and account validation"

  identity_workflow:
    primary_rules: ["BR-08", "BR-09", "BR-10", "BR-11"]
    description: "Rules for identity registration and approval process"

  attendance_lifecycle:
    primary_rules:
      ["BR-18", "BR-19", "BR-21", "BR-28", "BR-29", "BR-31", "BR-36", "BR-37"]
    description: "Rules governing the complete attendance management lifecycle"

  data_integrity:
    primary_rules: ["BR-12", "BR-13", "BR-24", "BR-27"]
    description: "Rules ensuring data consistency and audit trail"

  academic_data_management:
    primary_rules: ["BR-34", "BR-35"]
    description: "Rules for academic data management including slot categories and lecturer permissions"

  permission_control:
    primary_rules: ["BR-05", "BR-25", "BR-26"]
    description: "Rules controlling access and permission management"

# Validation Matrix
validation_requirements:
  critical_validations:
    - rule: "BR-01"
      validation_type: "Format validation"
      implementation: "Username format check against Student/Staff ID pattern"

    - rule: "BR-05"
      validation_type: "Business logic validation"
      implementation: "Role compatibility check before assignment"

    - rule: "BR-21"
      validation_type: "Workflow validation"
      implementation: "Finalization rules UI with mandatory status conversion"

    - rule: "BR-27"
      validation_type: "Audit validation"
      implementation: "Automatic audit log creation for critical operations"

    - rule: "BR-28"
      validation_type: "Input validation"
      implementation: "Non-empty remark validation for manual attendance edits"

  runtime_validations:
    - rule: "BR-16"
      validation_type: "Referential integrity"
      implementation: "Camera-room relationship validation during slot creation"
