# Identity Management Tables
# FUACS Database Schema - Version 1.0

tables:
  identity_submissions:
    primary_key: id
    description: "Student identity registration and update requests"
    columns:
      id:
        type: INT
        constraints: [NOT NULL, PRIMARY KEY, AUTO_INCREMENT]
        description: "Unique submission identifier"
      created_at:
        type: timestamp
        constraints: [NOT NULL]
        default: now()
        description: "Submission creation timestamp"
      updated_at:
        type: timestamp
        constraints: [NOT NULL]
        description: "Submission last update timestamp"
      reviewed_at:
        type: timestamp
        constraints: [NULL]
        description: "When submission was reviewed (null if pending)"
      student_user_id:
        type: int
        constraints: [NOT NULL]
        foreign_key:
          table: users
          column: id
        description: "Student submitting identity request"
      reviewed_by_user_id:
        type: int
        constraints: [NULL]
        foreign_key:
          table: users
          column: id
        description: "Data operator who reviewed the submission"
      status:
        type: varchar(20)
        constraints: [NOT NULL]
        description: "Submission status: 'pending', 'approved', 'rejected'"
      submission_type:
        type: varchar(20)
        constraints: [NOT NULL]
        description: "Type of submission: 'initial', 'update'"
      rejection_reason:
        type: text
        constraints: [NULL]
        description: "Reason for rejection (required if status is 'rejected')"
    indexes:
      - name: idx_identity_submissions_status
        columns: [status]
        description: "For pending queue queries"
      
      - name: idx_identity_submissions_student_user_id
        columns: [student_user_id]
        description: "For student identity history queries"
      
      - name: idx_identity_submissions_reviewed_at
        columns: [reviewed_at]
        description: "For filtering reviewed vs pending submissions"
    notes:
      - "Initial submissions require both face video and face photo"
      - "Update submissions only require face video"
      - "Approved submissions trigger face embedding generation"

  identity_assets:
    primary_key: id
    description: "Files uploaded as part of identity submissions"
    columns:
      id:
        type: INT
        constraints: [NOT NULL, PRIMARY KEY, AUTO_INCREMENT]
        description: "Unique asset identifier"
      created_at:
        type: timestamp
        constraints: [NOT NULL]
        default: now()
        description: "Asset creation timestamp"
      updated_at:
        type: timestamp
        constraints: [NOT NULL]
        description: "Asset last update timestamp"
      submission_id:
        type: int
        constraints: [NOT NULL]
        foreign_key:
          table: identity_submissions
          column: id
        description: "Reference to identity submission"
      is_active:
        type: boolean
        constraints: [NOT NULL]
        default: true
        description: "Asset status"
      asset_type:
        type: varchar(20)
        constraints: [NOT NULL]
        description: "Type of asset: 'face_video' or 'face_photo'"
      storage_url:
        type: varchar(255)
        constraints: [NOT NULL]
        description: "URL/path to stored file"
    notes:
      - "Each submission can have multiple assets"
      - "Face videos are processed to generate embeddings"
      - "Face photos are used for manual verification by data operators"

  face_embeddings:
    primary_key: id
    description: "Vector embeddings generated from approved face videos for recognition"
    columns:
      id:
        type: INT
        constraints: [NOT NULL, PRIMARY KEY, AUTO_INCREMENT]
        description: "Unique embedding identifier"
      created_at:
        type: timestamp
        constraints: [NOT NULL]
        default: now()
        description: "Embedding creation timestamp"
      updated_at:
        type: timestamp
        constraints: [NOT NULL]
        description: "Embedding last update timestamp"
      student_user_id:
        type: int
        constraints: [NOT NULL]
        foreign_key:
          table: users
          column: id
        description: "Student this embedding belongs to"
      generated_from_asset_id:
        type: int
        constraints: [NOT NULL]
        foreign_key:
          table: identity_assets
          column: id
        description: "Source asset used to generate this embedding"
      version:
        type: int
        constraints: [NOT NULL]
        description: "Embedding version (incremented on updates)"
      is_active:
        type: boolean
        constraints: [NOT NULL]
        default: false
        description: "Whether this embedding is currently used for recognition"
      embedding_vector:
        type: vector(512)
        constraints: [NOT NULL]
        description: "512-dimensional face embedding vector"
    indexes:
      - name: idx_face_embeddings_student_active
        columns: [student_user_id]
        where: "is_active = true"
        unique: true
        description: "Ensure only one active embedding per student"
      
      - name: idx_face_embeddings_vector
        type: "ivfflat"
        columns: [embedding_vector]
        options: "lists = 100"
        description: "For fast vector similarity search using IVFFlat algorithm. Parameter 'lists' should be adjusted based on data size: lists â‰ˆ sqrt(total_rows). Current value (100) is suitable for ~10,000 students."
    notes:
      - "Requires pgvector extension for vector operations"
      - "Only one embedding per student can be active at a time (enforced by unique index)"
      - "Version is incremented with each identity update (see BR-32)"
      - "Keep last 3 versions for audit and rollback purposes"
      - "Vector similarity search is used for face recognition"
      - "IVFFlat index performance tuning: Adjust 'lists' parameter as data grows. Rule of thumb: lists = sqrt(total_active_embeddings). Monitor query performance and rebuild index if needed."

extensions_required:
  - name: pgvector
    description: "Required for storing and querying face embedding vectors"
    tables: [face_embeddings]