# Roles and Permissions Tables
# FUACS Database Schema - Version 1.0

tables:
  roles:
    primary_key: id
    description: "System roles definition"
    columns:
      id:
        type: SMALLINT
        constraints: [NOT NULL, PRIMARY KEY, AUTO_INCREMENT]
        description: "Unique role identifier"
      created_at:
        type: timestamp
        constraints: [NOT NULL]
        default: now()
        description: "Record creation timestamp"
      updated_at:
        type: timestamp
        constraints: [NOT NULL]
        description: "Record last update timestamp"
      is_active:
        type: boolean
        constraints: [NOT NULL]
        default: true
        description: "Soft delete flag"
      name:
        type: varchar(100)
        constraints: [NOT NULL, UNIQUE]
        description: "Role name (e.g., STUDENT, LECTURER, SYSTEM_ADMIN)"

  permissions:
    primary_key: id
    description: "System permissions catalog"
    columns:
      id:
        type: SMALLINT
        constraints: [NOT NULL, PRIMARY KEY, AUTO_INCREMENT]
        description: "Unique permission identifier"
      created_at:
        type: timestamp
        constraints: [NOT NULL]
        default: now()
        description: "Record creation timestamp"
      updated_at:
        type: timestamp
        constraints: [NOT NULL]
        description: "Record last update timestamp"
      is_active:
        type: boolean
        constraints: [NOT NULL]
        default: true
        description: "Soft delete flag"
      name:
        type: varchar(100)
        constraints: [NOT NULL, UNIQUE]
        description: "Permission name (e.g., USER_CREATE, SLOT_READ)"

  user_roles:
    primary_key: [user_id, role_id]
    description: "Many-to-many relationship between users and roles"
    columns:
      user_id:
        type: int
        constraints: [NOT NULL, PRIMARY KEY]
        foreign_key:
          table: users
          column: id
        description: "Reference to user"
      role_id:
        type: smallint
        constraints: [NOT NULL, PRIMARY KEY]
        foreign_key:
          table: roles
          column: id
        description: "Reference to role"

  role_permissions:
    primary_key: [role_id, permission_id]
    description: "Many-to-many relationship between roles and permissions"
    columns:
      role_id:
        type: smallint
        constraints: [NOT NULL, PRIMARY KEY]
        foreign_key:
          table: roles
          column: id
        description: "Reference to role"
      permission_id:
        type: smallint
        constraints: [NOT NULL, PRIMARY KEY]
        foreign_key:
          table: permissions
          column: id
        description: "Reference to permission"