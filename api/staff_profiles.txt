POST   	| /staff-profiles 	   			     
GET    	| /staff-profiles 	   			     
GET    	| /staff-profiles/{id} 		     
PUT    	| /staff-profiles/{id} 			   
DELETE 	| /staff-profiles/{id}
POST   	| /staff-profiles/import 			  
GET    	| /staff-profiles/{id}/classes
GET    	| /staff-profiles/{id}/subjects
GET    	| /staff-profiles/{id}/rooms

=================================================== Search staff profiles ==================================================

2. GET /api/v1/staff-profiles
Permission: USER_READ_LIST
Query Parameters:
| Parameter 	| Type 		      | Required 	| Default | Validation 
| page 		    | integer 	    | No 		    | 1 		  | 1-50 
| pageSize 	  | integer 	    | No 		    | 10 		  | 1-50 
| sort 		    | string 	      | No 		    | asc 		| asc/desc 
| sortBy 	    | string 	      | No		    | fullName | fullName, staffCode, email
| search 	    | string 	      | No 		    | "" 		  | Search in fullName, staffCode, email
| roleId 	    | smallint 	    | No 		    | null 		| Filter by role
| isActive    | boolean      | No        | null    | Filter by active status

200-Success Response
{
  "status": 200,
  "data": {
    "items": [
      {
        "userId": 101,
        "fullName": "Nguyen Van A",
        "email": "nguyenvana@fpt.edu.vn",
        "username": "XXXXXX",
        "staffCode": "EMP001",
        "roles": ["LECTURER"],
        "isActive": true,
        "createdAt": "2024-10-16T11:00:00Z",
        "updatedAt": "2024-10-16T11:00:00Z"
      },
	...
    ],
    "totalPages": 2,
    "currentPage": 1,
    "pageSize": 10,
    "totalItems": 15
  }
}

400-Invalid query parameters:
{
  "status": 400,
  "message": "Page must >= 1, Invalid sort parameter...",
  "code": "INVALID_PAGE" | "INVALID_PAGE_SIZE" | "INVALID_SORT" | "INVALID_SORT_BY"
}
=======================================================================================================================
=================================================== Get staff profile by id ================================================

3. GET /api/v1/staff-profiles/{id}
Permission: USER_READ_DETAIL
| Parameter 	| Type 	| Required 	| Description
| id 		| int   | Yes 		| Staff Profile ID (user_id)

200-Success Response:
{
  "status": 200,
  "message": null,
  "data": {
    "userId": 101,
    "fullName": "Nguyen Van A",
    "email": "nguyenvana@fpt.edu.vn",
    "username": "EMP001",
    "staffCode": "EMP001",
    "roles": ["LECTURER", "SUPERVISOR"],
    "isActive": true,
    "createdAt": "2024-10-16T11:00:00Z",
    "updatedAt": "2024-10-16T11:00:00Z"
  }
}

400 - Invalid Field type:
{
  "status": 400,
  "message": "Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'",
  "code": "INVALID_FIELD_TYPE"
}

404 - Staff profile not found:
{
  "status": 404,
  "message": "Staff profile not found: 1",
  "code": "STAFF_PROFILE_NOT_FOUND"
}

=======================================================================================================================
================================================ Create a new staff profile ================================================
1. POST /api/v1/staff-profiles
Permission: USER_CREATE
Request Body:
{
  "fullName": "Nguyen Van A",		
  "email": "nguyenvana@fpt.edu.vn",		
  "staffCode": "EMP001",	
  "password": "defaultPassword123",
  "roles": ["LECTURER"]
}

Request Body Schema:
| Field 	  | Type 		      | Required| Validation 
| fullName 	| string 	      | Yes 		| Not blank, max 150 chars
|           |              |         | Pattern: ^[A-Za-z]+( [A-Za-z]+)*$ (letters and spaces only)
|           |              |         | No leading/trailing/multiple spaces
| email 		| string 	      | Yes 		| Valid email format, max 128 chars, unique
| staffCode | string        | Yes 		| Not blank, max 20 chars, unique
|           |              |         | Pattern: ^[A-Z0-9]+$ (UPPERCASE letters and digits only)
| password 	| string        | No 		  | Min 8 chars, if not provided system generates default
| roles 	  | array[string] | Yes 		| Valid roles: LECTURER, SUPERVISOR, DATA_OPERATOR, SYSTEM_ADMIN

201-Success Response:
{
  "status": 201,
  "data": {
    "userId": 101,
    "fullName": "Nguyen Van A",
    "email": "nguyenvana@fpt.edu.vn",
    "username": "EMP001",
    "staffCode": "EMP001",
    "roles": ["LECTURER"],
    "isActive": true,
    "createdAt": "2024-10-16T11:00:00Z",
    "updatedAt": "2024-10-16T11:00:00Z"
  }
}

409 - Role assignment conflict:
{
  "status": 409,
  "message": "You do not have permission to assign this role to this account",
  "code": "ROLE_ASSIGNMENT_CONFLICT"
}

Response Schema:
| Field 	    | Type 		      | Description 
| userId 	    | int 	        | Same as id (reference to users table)
| fullName 	  | string 	      | Staff full name 
| email 		  | string 	      | Staff email address 
| username 	  | string 	      | Login username (same as staffCode)
| staffCode 	| string        | Staff employee code
| roles 	    | array[string] | Assigned roles
| isActive 	  | boolean 	    | Account active status
| createdAt 	| string 	      | YYYY-MM-DDTHH:mm:SSZ
| updatedAt 	| string 	      | YYYY-MM-DDTHH:mm:SSZ

400-Missing fields required:
{
  "status": 400,
  "message": "Full name must not be blank/Email required/Staff code required...",
  "code": "FULL_NAME_REQUIRED" | "EMAIL_REQUIRED" | "STAFF_CODE_REQUIRED" | "ROLES_REQUIRED"
}

400-Invalid field type:
{
  "status": 400,
  "message": "Invalid email format/Invalid role...",
  "code": "INVALID_EMAIL_FORMAT" | "INVALID_ROLE"
}

400-Fields existed:
{
  "status": 400,
  "message": "Email/Staff code already exists: nguyenvana@fpt.edu.vn",
  "code": "EMAIL_EXISTS" | "STAFF_CODE_EXISTS"
}

400-Malformed request body:
{
  "status": 400,
  "message": "Malformed JSON request",
  "code": "MALFORMED_JSON"
}
=======================================================================================================================
=================================================== Update staff profile ===================================================
Note:
- When setting isActive = false: Staff account will be deactivated (soft delete)
- When setting isActive = true: Staff account will be reactivated
- Role constraints: SUPERVISOR or LECTURER roles cannot be assigned to users with STUDENT role

4. PUT /api/v1/staff-profiles/{id}
Permission: USER_UPDATE_INFO, USER_UPDATE_STATUS, USER_ASSIGN_ROLES

Path Parameters:
| Parameter 	| Type 	| Required 	| Description
| id 		      | int   | Yes 		  | Staff Profile ID (user_id)

Request Body:
{
  "fullName": "Nguyen Van A - Updated",
  "email": "nguyenvana.updated@fpt.edu.vn",
  "staffCode": "EMP001",
  "roles": ["LECTURER", "SUPERVISOR"],
  "isActive": true
}

Request body schema:
| Field     | Type          | Required  | Validation
| fullName  | string        | Yes       | Not blank, max 150 chars
|           |               |           | Pattern: ^[A-Za-z]+( [A-Za-z]+)*$ (letters and spaces only)
|           |               |           | No leading/trailing/multiple spaces
| email     | string        | Yes       | Valid email format, max 128 chars, unique
| staffCode | string        | Yes       | Not blank, max 20 chars, unique
|           |               |           | Pattern: ^[A-Z0-9]+$ (UPPERCASE letters and digits only)
| roles     | array[string] | Yes       | Valid roles, cannot assign STUDENT role to staff
| isActive  | boolean       | Yes       | Not null

200-Success Response:
{
  "status": 200,
  "data": {
    "userId": 101,
    "fullName": "Nguyen Van A - Updated",
    "email": "nguyenvana.updated@fpt.edu.vn",
    "username": "EMP001",
    "staffCode": "EMP001",
    "roles": ["LECTURER", "SUPERVISOR"],
    "isActive": true,
    "createdAt": "2024-10-16T11:00:00Z",
    "updatedAt": "2024-10-16T12:30:00Z"
  }
}

Other errors are similar to Create Staff Profile plus the following:
404-Staff profile not found:
{
  "status": 404,
  "message": "Staff profile not found: 1",
  "code": "STAFF_PROFILE_NOT_FOUND"
}

409 - Role assignment conflict:
{
  "status": 409,
  "message": "Cannot assign SUPERVISOR/LECTURER roles to users with STUDENT role",
  "code": "ROLE_ASSIGNMENT_CONFLICT"
}
=======================================================================================================================
=================================================== Delete staff profile ===================================================

5. DELETE /api/v1/staff-profiles/{id}
Permission: USER_DELETE_HARD
Path Parameters:
| Parameter 	| Type 	| Required | Description
| id 		      | int   | Yes 		 | Staff Profile ID (user_id)

200-Success Response:
{
  "status": 200,
  "message": "Delete staff profile successfully"
}

400 - Invalid Field type:
{
  "status": 400,
  "message": "Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'",
  "code": "INVALID_FIELD_TYPE"
}

404 - Staff profile not found:
{
  "status": 404,
  "message": "Staff profile not found: 1",
  "code": "STAFF_PROFILE_NOT_FOUND"
}

409 - Conflict (foreign key constraint):
{
  "status": 409,
  "message": "Cannot delete staff profile with active assignments (classes, slots, etc.)",
  "code": "FOREIGN_KEY_CONSTRAINT_VIOLATION"
}

=======================================================================================================================
============================================= Bulk Import Staff Profiles ==============================================
Note:
- This API implements "Upsert" logic based on 'staffCode' as the key and supports 'Interactive Import Flow'.
- API processes with 'Partial Success' pattern. Creates new users, corresponding profiles, and assigns roles.

6. POST /api/v1/staff-profiles/import
Permission: USER_IMPORT

Request Body: (Content-Type: multipart/form-data)
| Part Name | Type        | Required | Validation / Description
| file      | file (.csv) | Yes      | CSV file containing staff data, following BR-52 format.
| mode      | string      | Yes      | Import mode: 'AddOnly' or 'AddAndUpdate'.

Business Rules:
- Reference BR-52 (Bulk Import Staff CSV Format and Validation) from business_rules.yaml.
- Business key is 'staffCode'. 'staffCode' will also be used as 'username'.
- If mode = 'AddOnly': Skip rows where 'staffCode' or 'email' already exists.
- If mode = 'AddAndUpdate': Update rows where 'staffCode' already exists (fullName, email, roles). Does not update password.

200-Success Response (Returns only error list):
(Always returns 200 OK. 'data' is an ARRAY containing error rows. Empty array '[]' means all rows in this batch succeeded.)
{
  "status": 200,
  "message": "Import processed.",
  "data": [
    {
      "rowNumber": 2,
      "errorCode": "STAFF_CODE_EXISTS",
      "message": "Duplicate 'staffCode' (EMP999) in 'AddOnly' mode."
    },
    {
      "rowNumber": 4,
      "errorCode": "EMAIL_EXISTS",
      "message": "Email 'another.staff@fpt.edu.vn' already exists."
    },
    {
      "rowNumber": 6,
      "errorCode": "INVALID_ROLE",
      "message": "Invalid role specified: 'MANAGER'. Allowed roles: LECTURER, SUPERVISOR, DATA_OPERATOR, SYSTEM_ADMIN."
    },
    {
      "rowNumber": 9,
      "errorCode": "ROLES_REQUIRED",
      "message": "Roles column cannot be empty."
    }
  ]
}

Response Schema:
| Field      | Type          | Description
| status     | integer       | Always 200 for processed requests
| message    | string        | "Import processed."
| data       | array[object] | Array of error objects (empty if all rows succeeded)

Error Object Schema:
| Field      | Type    | Description
| rowNumber  | integer | Row number in CSV file (1-based, excluding header)
| errorCode  | string  | Error code identifier
| message    | string  | Human-readable error message

Possible Error Codes in data array:
- STAFF_CODE_EXISTS: Duplicate staffCode in AddOnly mode
- EMAIL_EXISTS: Email already exists
- INVALID_ROLE: Invalid role specified
- ROLES_REQUIRED: Roles field is blank
- FULL_NAME_REQUIRED: Full name field is blank
- EMAIL_REQUIRED: Email field is blank
- STAFF_CODE_REQUIRED: Staff code field is blank
- INVALID_EMAIL_FORMAT: Email format validation failed
- INVALID_FIELD_FORMAT: Field format validation failed
- ROLE_ASSIGNMENT_CONFLICT: Cannot assign conflicting roles

400-Bad Request (File or Mode missing/invalid):
{
  "status": 400,
  "message": "Required part 'file' is not present / Invalid import mode.",
  "code": "INVALID_MULTIPART_REQUEST" | "INVALID_IMPORT_MODE"
}

400-Invalid file format:
{
  "status": 400,
  "message": "Invalid CSV format / Missing required columns",
  "code": "INVALID_CSV_FORMAT" | "MISSING_CSV_COLUMNS"
}

403-Forbidden:
{
  "status": 403,
  "message": "Permission USER_IMPORT is required.",
  "code": "FORBIDDEN"
}

=======================================================================================================================
============================================ Get classes by staff profile id ===============================================
Note: 
- Get classes where this staff member is assigned as lecturer or supervisor

7. GET /api/v1/staff-profiles/{staffId}/classes
Permission: CLASS_READ
Path Parameters:
| Parameter 	| Type 	| Required 	| Description
| id 	        | int   | Yes 		  | Staff Profile ID (user_id)

Query Parameters:
| Parameter 	| Type 		| Required| Default | Validation
| page 		    | integer | No 		  | 1 		  | 1-50
| pageSize 	  | integer | No 		  | 10 		  | 1-50
| sort 		    | string 	| No 		  | asc 		| asc/desc
| sortBy 	    | string 	| No 		  | code 		| code
| search 	    | string 	| No 		  | "" 		  | Search in class code and subject name
| semesterId  | short   | No      | null    | Filter by semester
| isActive    | boolean | No      | null    | Filter by active status

200-Success Response: 
{
  "status": 200,
  "data": {
    "items": [
      {
        "id": 1,
        "code": "SE1801",
        "subject": {
          "id": 1,
          "name": "Java Programming",
          "code": "PRJ301",
          "isActive": true
        },
        "semester": {
          "id": 1,
          "name": "Fall 2024",
          "code": "FA24",
          "isActive": true
        },
        "role": "LECTURER",
        "isActive": true,
        "createdAt": "2024-10-16T11:00:00Z",
        "updatedAt": "2024-10-16T11:00:00Z"
      },
	    ...
    ],
    "totalPages": 3,
    "currentPage": 1,
    "pageSize": 10,
    "totalItems": 25
  }
}

Class Object Schema:
| Field    | Type    | Description
| id       | integer | Class ID (Short type in DB)
| code     | string  | Class code
| subject  | object  | Subject object (id, name, code, isActive)
| semester | object  | Semester object (id, name, code, isActive)
| role     | string  | Staff role in this class (LECTURER or SUPERVISOR)
| isActive | boolean | Class active status
| createdAt| string  | YYYY-MM-DDTHH:mm:SSZ
| updatedAt| string  | YYYY-MM-DDTHH:mm:SSZ

400-Invalid query parameters:
{
  "status": 400,
  "message": "Page must >= 1, Invalid sort parameter...",
  "code": "INVALID_PAGE" | "INVALID_PAGE_SIZE" | "INVALID_SORT" | "INVALID_SORT_BY"
}

400 - Invalid Field type:
{
  "status": 400,
  "message": "Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'",
  "code": "INVALID_FIELD_TYPE"
}

404 - Staff profile not found:
{
  "status": 404,
  "message": "Staff profile not found: 1",
  "code": "STAFF_PROFILE_NOT_FOUND"
}

=======================================================================================================================
============================================ Get subjects by staff profile id ===============================================
Note: 
- Get subjects where this staff member is assigned as lecturer or supervisor
- Returns unique subjects from all classes assigned to this staff member

8. GET /api/v1/staff-profiles/{staffId}/subjects
Permission: SUBJECT_READ
Path Parameters:
| Parameter 	| Type 	| Required 	| Description
| staffId 	  | int   | Yes 		  | Staff Profile ID (user_id)

Query Parameters:
| Parameter 	| Type 		| Required| Default | Validation
| page 		    | integer | No 		  | 1 		  | 1-50
| pageSize 	  | integer | No 		  | 10 		  | 1-50
| sort 		    | string 	| No 		  | asc 		| asc/desc
| sortBy 	    | string 	| No 		  | name 		| name, code
| search 	    | string 	| No 		  | "" 		  | Search in subject name and code
| semesterId  | short   | No      | null    | Filter by semester
| isActive    | boolean | No      | null    | Filter by active status

200-Success Response: 
{
  "status": 200,
  "data": {
    "items": [
      {
        "id": 1,
        "name": "Java Programming",
        "code": "PRJ301",
        "major": {
          "id": 1,
          "name": "Software Engineering",
          "code": "SE",
          "isActive": true
        },
        "role": "LECTURER",
        "assignedClasses": [
          {
            "id": 1,
            "code": "SE1801",
            "semester": {
              "id": 1,
              "name": "Fall 2024",
              "code": "FA24"
            }
          },
          {
            "id": 2,
            "code": "SE1802",
            "semester": {
              "id": 1,
              "name": "Fall 2024",
              "code": "FA24"
            }
          }
        ],
        "isActive": true,
        "createdAt": "2024-10-16T11:00:00Z",
        "updatedAt": "2024-10-16T11:00:00Z"
      },
      ...
    ],
    "totalPages": 2,
    "currentPage": 1,
    "pageSize": 10,
    "totalItems": 15
  }
}

Subject Object Schema:
| Field           | Type    | Description
| id              | integer | Subject ID (Short type in DB)
| name            | string  | Subject name
| code            | string  | Subject code
| major           | object  | Major object (id, name, code, isActive)
| role            | string  | Staff role for this subject (LECTURER or SUPERVISOR)
| assignedClasses | array   | List of classes where staff teaches this subject
| isActive        | boolean | Subject active status
| createdAt       | string  | YYYY-MM-DDTHH:mm:SSZ
| updatedAt       | string  | YYYY-MM-DDTHH:mm:SSZ

400-Invalid query parameters:
{
  "status": 400,
  "message": "Page must >= 1, Invalid sort parameter...",
  "code": "INVALID_PAGE" | "INVALID_PAGE_SIZE" | "INVALID_SORT" | "INVALID_SORT_BY"
}

400 - Invalid Field type:
{
  "status": 400,
  "message": "Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'",
  "code": "INVALID_FIELD_TYPE"
}

404 - Staff profile not found:
{
  "status": 404,
  "message": "Staff profile not found: 1",
  "code": "STAFF_PROFILE_NOT_FOUND"
}

=======================================================================================================================
============================================== Get rooms by staff profile id ===============================================
Note: 
- Get rooms where this staff member has conducted or scheduled to conduct slots
- Returns unique rooms from all slots assigned to this staff member
- Useful for filtering rooms in slot creation/editing forms

9. GET /api/v1/staff-profiles/{staffId}/rooms
Permission: ROOM_READ
Path Parameters:
| Parameter 	| Type 	| Required 	| Description
| staffId 	  | int   | Yes 		  | Staff Profile ID (user_id)

Query Parameters:
| Parameter 	| Type 		| Required| Default | Validation
| page 		    | integer | No 		  | 1 		  | 1-50
| pageSize 	  | integer | No 		  | 10 		  | 1-50
| sort 		    | string 	| No 		  | asc 		| asc/desc
| sortBy 	    | string 	| No 		  | name 		| name, location
| search 	    | string 	| No 		  | "" 		  | Search in room name and location
| semesterId  | short   | No      | null    | Filter by semester (from slots)
| isActive    | boolean | No      | null    | Filter by active status
| startDate   | string  | No      | null    | YYYY-MM-DD (filter slots from this date)
| endDate     | string  | No      | null    | YYYY-MM-DD (filter slots to this date)

200-Success Response: 
{
  "status": 200,
  "data": {
    "items": [
      {
        "id": 1,
        "name": "Room A101",
        "location": "Building A, Floor 1",
        "usageCount": 15,
        "lastUsedAt": "2024-10-20T10:00:00Z",
        "upcomingSlots": [
          {
            "id": 25,
            "title": "Java Programming Lecture",
            "startTime": "2024-10-25T08:00:00Z",
            "endTime": "2024-10-25T10:00:00Z",
            "slotCategory": "LECTURE"
          }
        ],
        "isActive": true,
        "createdAt": "2024-09-01T10:00:00Z",
        "updatedAt": "2024-10-16T11:00:00Z"
      },
      ...
    ],
    "totalPages": 2,
    "currentPage": 1,
    "pageSize": 10,
    "totalItems": 12
  }
}

Room Object Schema:
| Field         | Type    | Description
| id            | integer | Room ID (Short type in DB)
| name          | string  | Room name
| location      | string  | Room location description
| usageCount    | integer | Number of slots conducted in this room by this staff
| lastUsedAt    | string  | Last slot end time in this room (YYYY-MM-DDTHH:mm:SSZ)
| upcomingSlots | array   | Next 3 upcoming slots in this room for this staff
| isActive      | boolean | Room active status
| createdAt     | string  | YYYY-MM-DDTHH:mm:SSZ
| updatedAt     | string  | YYYY-MM-DDTHH:mm:SSZ

400-Invalid query parameters:
{
  "status": 400,
  "message": "Page must >= 1, Invalid sort parameter...",
  "code": "INVALID_PAGE" | "INVALID_PAGE_SIZE" | "INVALID_SORT" | "INVALID_SORT_BY"
}

400 - Invalid date format:
{
  "status": 400,
  "message": "Invalid date format. Expected YYYY-MM-DD",
  "code": "INVALID_DATE_FORMAT"
}

400 - Invalid Field type:
{
  "status": 400,
  "message": "Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'",
  "code": "INVALID_FIELD_TYPE"
}

404 - Staff profile not found:
{
  "status": 404,
  "message": "Staff profile not found: 1",
  "code": "STAFF_PROFILE_NOT_FOUND"
}

=======================================================================================================================
====================================================== Notes ==========================================================

- Staff Profile ID is of type Integer (same as user_id)
- All timestamps are in ISO 8601 format (UTC): YYYY-MM-DDTHH:mm:SSZ
- Search parameter searches in fullName, staffCode, and email fields
- Pagination is 1-based (page=1 is the first page)
- Default sort is by id in ascending order
- Soft delete is done via PUT endpoint by setting isActive = false
- Hard delete via DELETE endpoint is permanent and may fail if staff has active assignments
- Staff code and email must be unique
- Username is automatically set to staffCode
- Role assignment follows business rules (no STUDENT role for staff)
- Import endpoint supports 'Interactive Import Flow' with partial success pattern
- Import mode 'AddOnly' skips existing staff (by staffCode), 'AddAndUpdate' updates them
- Import always returns 200 OK with error array (empty array means all rows succeeded)

Available Staff Roles:
- LECTURER: Can manage lecture sessions and attendance
- SUPERVISOR: Can supervise exam sessions
- DATA_OPERATOR: Can manage system data and user accounts
- SYSTEM_ADMIN: Can configure system settings and permissions

Common Status Codes:
- 200: Success
- 201: Created
- 400: Bad Request (validation errors, invalid parameters, duplicate email/staffCode)
- 401: Unauthorized (missing or invalid token)
- 403: Forbidden (insufficient permissions)
- 404: Not Found (staff profile not found)
- 409: Conflict (foreign key constraint violation, role assignment conflict)
- 500: Internal Server Error
