POST    | /remarks            | ATTENDANCE_REMARK_MANAGE
PUT     | /remarks/{id}       | ATTENDANCE_REMARK_MANAGE
DELETE  | /remarks/{id}       | ATTENDANCE_REMARK_MANAGE

=======================================================================================================================
================================================= Create a new remark =================================================

1. POST /api/v1/remarks
Permission: ATTENDANCE_REMARK_MANAGE
Description: Add a new remark to an attendance record (regular or exam). Uses polymorphic association to support both types.

Request Body:
{
  "attendableId": 501,
  "attendableType": "regular",
  "remark": "Student arrived 10 minutes late but was allowed to attend"
}

Request Schema:
| Field          | Type    | Required | Validation
|----------------|---------|----------|-----------
| attendableId   | long    | Yes      | ID of the attendance record (regular or exam)
| attendableType | string  | Yes      | Must be "regular" (for attendance_records) or "exam" (for exam_attendance)
| remark         | string  | Yes      | Not blank, max 1000 chars

Business Rules:
- Multiple remarks can be added to the same attendance record
- Remarks are sorted by createdAt DESC (newest first)
- created_by_user_id is automatically set to current user
- is_active is set to true by default
- Polymorphic association determines which table to reference

201-Success Response:
{
  "status": 201,
  "data": {
    "id": 1003,
    "attendableId": 501,
    "attendableType": "regular",
    "remark": "Student arrived 10 minutes late but was allowed to attend",
    "createdBy": {
      "userId": 10,
      "fullName": "John Lecturer"
    },
    "isActive": true,
    "createdAt": "2024-10-19T15:00:00Z",
    "updatedAt": "2024-10-19T15:00:00Z"
  }
}

Response Schema:
| Field           | Type    | Description
|-----------------|---------|----------------------------------------------|
| id              | long    | Remark ID
| attendableId    | long    | ID of the attendance record (regular or exam)
| attendableType  | string  | Type: "regular" or "exam"
| remark          | string  | Remark content
| createdBy       | object  | User who created the remark (userId, fullName)
| isActive        | boolean | Remark status (true=active, false=deleted)
| createdAt       | string  | YYYY-MM-DDTHH:mm:SSZ
| updatedAt       | string  | YYYY-MM-DDTHH:mm:SSZ

400-Fields required:
{
  "status": 400,
  "message": "attendableId is required / attendableType is required / Remark is required",
  "code": "ATTENDABLE_ID_REQUIRED" | "ATTENDABLE_TYPE_REQUIRED" | "REMARK_REQUIRED"
}

400-Invalid attendableType:
{
  "status": 400,
  "message": "attendableType must be 'regular' or 'exam'",
  "code": "INVALID_ATTENDABLE_TYPE"
}

400-Empty remark:
{
  "status": 400,
  "message": "Remark must not be blank",
  "code": "REMARK_CANNOT_BE_EMPTY"
}

404-Attendance record not found:
{
  "status": 404,
  "message": "Attendance record not found with type 'regular' and id '501'",
  "code": "ATTENDANCE_RECORD_NOT_FOUND"
}

400-Malformed JSON:
{
  "status": 400,
  "message": "Malformed JSON request",
  "code": "MALFORMED_JSON"
}

=======================================================================================================================
================================================== Update remark ======================================================

2. PUT /api/v1/remarks/{id}
Permission: ATTENDANCE_REMARK_MANAGE
Description: Update an existing remark.

Path Parameters:
| Parameter | Type | Required | Description
| id        | long | Yes      | Remark ID

Request Body:
{
  "remark": "Student arrived 15 minutes late (updated)"
}

Request Schema:
| Field  | Type   | Required | Validation
|--------|--------|----------|-----------
| remark | string | Yes      | Not blank, max 1000 chars

Business Rules:
- updatedAt is updated to current timestamp

200-Success Response:
{
  "status": 200,
  "message": "Remark updated successfully",
  "data": {
    "id": 1003,
    "attendableId": 501,
    "attendableType": "regular",
    "remark": "Student arrived 15 minutes late (updated)",
    "createdBy": {
      "userId": 10,
      "fullName": "John Lecturer"
    },
    "isActive": true,
    "createdAt": "2024-10-19T15:00:00Z",
    "updatedAt": "2024-10-19T15:30:00Z"
  }
}

400-Fields required:
{
  "status": 400,
  "message": "Remark is required",
  "code": "REMARK_REQUIRED"
}

400-Empty remark:
{
  "status": 400,
  "message": "Remark must not be blank",
  "code": "REMARK_CANNOT_BE_EMPTY"
}

404-Remark not found:
{
  "status": 404,
  "message": "Remark not found: 1003",
  "code": "REMARK_NOT_FOUND"
}

400-Malformed JSON:
{
  "status": 400,
  "message": "Malformed JSON request",
  "code": "MALFORMED_JSON"
}

=======================================================================================================================
================================================== Delete remark ======================================================

3. DELETE /api/v1/remarks/{id}
Permission: ATTENDANCE_REMARK_MANAGE
Description: Soft delete a remark.

Path Parameters:
| Parameter | Type | Required | Description
| id        | long | Yes      | Remark ID

Business Rules:
- Soft delete: set is_active = false (not hard delete)
- Deleted remarks are not shown in attendance record responses

200-Success Response:
{
  "status": 200,
  "message": "Remark deleted successfully"
}

400-Invalid field type:
{
  "status": 400,
  "message": "Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'",
  "code": "INVALID_FIELD_TYPE"
}

404-Remark not found:
{
  "status": 404,
  "message": "Remark not found: 1003",
  "code": "REMARK_NOT_FOUND"
}

=======================================================================================================================
====================================================== Notes ==========================================================

Data Types:
- Remark ID: Long (BIGINT)
- Attendable ID: Long (BIGINT) - ID from either attendance_records or exam_attendance
- All timestamps: ISO 8601 format (UTC): YYYY-MM-DDTHH:mm:SSZ

Polymorphic Association:
- attendableType: Determines which table attendableId refers to
  * "regular": attendableId refers to attendance_records.id
  * "exam": attendableId refers to exam_attendance.id

Remark Management:
- Multiple remarks per attendance record (both regular and exam)
- Soft delete (is_active = false) - not hard delete
- Only active remarks shown in responses
- Sorted by createdAt DESC (newest first)

Permissions:
- ATTENDANCE_REMARK_MANAGE: Create/update/delete remarks (Lecturer, Supervisor, Data Operator)

Business Rules:
- BR-28: Remarks are used to explain manual status changes
- When manually updating attendance status, a remark is mandatory

Related Use Cases:
- UC-20: Add/Edit Attendance Remark (Lecturer)
- UC-31: Add/Edit Attendance Remark (Supervisor)

Audit Trail:
- All remark operations should be logged if required by the system
- Remark creators are tracked for permission checks

Common Status Codes:
- 200: Success
- 201: Created
- 400: Bad Request (validation errors, invalid parameters)
- 404: Not Found (remark or attendance record not found)
- 500: Internal Server Error
