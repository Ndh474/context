POST    | /identity-submissions              | OWN_IDENTITY_SUBMIT
GET     | /identity-submissions              | IDENTITY_SUBMISSION_READ_QUEUE
GET     | /identity-submissions/{id}         | IDENTITY_SUBMISSION_READ_DETAIL
PUT     | /identity-submissions/{id}/approve  | IDENTITY_SUBMISSION_APPROVE
PUT     | /identity-submissions/{id}/reject  | IDENTITY_SUBMISSION_REJECT
GET     | /identity-submissions/my-submissions | OWN_IDENTITY_SUBMIT

=========================================== Submit identity registration/update ====================================
1. POST /api/v1/identity-submissions
Permission: OWN_IDENTITY_SUBMIT
Description: Submit identity registration (initial) or update request. Students upload a static face photo and a short face video.

Request: Multipart form-data
Content-Type: multipart/form-data
Body:
- submissionType: string (required) - "initial" or "update"
- facePhoto: file (required) - Static face photo file
- faceVideo: file (required) - Short face video file

Request Schema:
| Field          | Type   | Required | Validation
|----------------|--------|----------|-----------
| submissionType | string | Yes      | Must be "initial" or "update"
| facePhoto      | file   | Yes      | Max 5MB, formats: JPG/PNG
| faceVideo      | file   | Yes      | Max 50MB, formats: MP4/MOV/AVI, duration: 5-30 seconds

Business Rules:
- BR-09: All submissions require manual approval by Data Operator
- BR-10: While update is pending, system uses old (approved) identity data
- Only 1 pending submission allowed per student (Q1)
- The static `facePhoto` will be used as the base/avatar image for visual comparison
- The `faceVideo` will be used to generate the face recognition vector
- Files stored in local filesystem: /uploads/identity/{student_id}/{timestamp}_{filename}

Validation Rules:
Face Photo:
- Max size: 5MB
- Allowed formats: image/jpeg, image/png
- Recommended resolution: min 1024x768

Face Video:
- Max size: 50MB
- Allowed formats: video/mp4, video/quicktime, video/x-msvideo
- Recommended duration: 5-30 seconds
- Recommended resolution: min 720p

201-Success Response:
{
  "status": 201,
  "message": "Identity submission created successfully. Please wait for approval.",
  "data": {
    "id": 1,
    "studentUserId": 201,
    "student": {
      "userId": 201,
      "fullName": "Tran Thi B",
      "rollNumber": "HE180314",
      "email": "tranthib@fpt.edu.vn"
    },
    "submissionType": "initial",
    "status": "pending",
    "assets": [
      {
        "id": 1,
        "assetType": "face_photo",
        "storageUrl": "/uploads/identity/201/1729339200_face_photo.jpg",
        "createdAt": "2024-10-19T10:00:00Z"
      },
      {
        "id": 2,
        "assetType": "face_video",
        "storageUrl": "/uploads/identity/201/1729339200_face_video.mp4",
        "createdAt": "2024-10-19T10:00:00Z"
      }
    ],
    "rejectionReason": null,
    "reviewedAt": null,
    "reviewedBy": null,
    "createdAt": "2024-10-19T10:00:00Z",
    "updatedAt": "2024-10-19T10:00:00Z",
    "version": 1
  }
}

Response Schema:
| Field           | Type   | Description
|-----------------|--------|-----------
| id              | integer| Submission ID
| studentUserId   | integer| Student user ID
| student         | object | Student details (userId, fullName, rollNumber, email)
| submissionType  | string | initial, update
| status          | string | pending, approved, rejected
| assets          | array  | List of uploaded files (face_photo, face_video)
| rejectionReason | string | Reason for rejection (null if not rejected)
| reviewedAt      | string | YYYY-MM-DDTHH:mm:SSZ (null if not reviewed)
| reviewedBy      | object | Data Operator who reviewed (null if not reviewed)
| createdAt       | string | YYYY-MM-DDTHH:mm:SSZ
| updatedAt       | string | YYYY-MM-DDTHH:mm:SSZ
| version         | integer| Version for optimistic locking

400-Fields required:
{
  "status": 400,
  "message": "Submission type is required / Face photo is required / Face video is required",
  "code": "SUBMISSION_TYPE_REQUIRED" | "FACE_PHOTO_REQUIRED" | "FACE_VIDEO_REQUIRED"
}

400-Invalid submission type:
{
  "status": 400,
  "message": "Invalid submission type. Must be 'initial' or 'update'",
  "code": "INVALID_SUBMISSION_TYPE"
}

400-File too large:
{
  "status": 400,
  "message": "Face photo exceeds maximum size of 5MB / Face video exceeds maximum size of 50MB",
  "code": "FILE_TOO_LARGE"
}

400-Invalid file format:
{
  "status": 400,
  "message": "Invalid face photo format. Allowed: JPG, PNG / Invalid face video format. Allowed: MP4, MOV, AVI",
  "code": "INVALID_FILE_FORMAT"
}

409-Pending submission exists:
{
  "status": 409,
  "message": "You have a pending identity submission. Please wait for review before submitting again.",
  "code": "PENDING_SUBMISSION_EXISTS"
}

500-File upload failed:
{
  "status": 500,
  "message": "Failed to upload file to server. Please try again.",
  "code": "FILE_UPLOAD_FAILED"
}

=======================================================================================================================
========================================== List identity submissions (queue) ==========================================

2. GET /api/v1/identity-submissions
Permission: IDENTITY_SUBMISSION_READ_QUEUE
Description: List identity submissions for Data Operator to review. Default filter shows pending submissions.

Query Parameters:
| Parameter      | Type    | Required | Default  | Validation 
| page           | integer | No       | 1        | >= 1
| pageSize       | integer | No       | 10       | 1-50 
| sort           | string  | No       | asc      | asc, desc 
| sortBy         | string  | No       | createdAt| createdAt, updatedAt, reviewedAt
| status         | string  | No       | pending  | pending, approved, rejected, all
| submissionType | string  | No       | null     | initial, update
| studentUserId  | integer | No       | null     | Filter by student
| search         | string  | No       | ""       | Search in student name, rollNumber, email

200-Success Response:
{
  "status": 200,
  "data": {
    "items": [
      {
        "id": 1,
        "studentUserId": 201,
        "student": {
          "userId": 201,
          "fullName": "Tran Thi B",
          "rollNumber": "HE180314",
          "email": "tranthib@fpt.edu.vn",
          "majorName": "Software Engineering"
        },
        "submissionType": "initial",
        "status": "pending",
        "hasVideo": true,
        "hasFacePhoto": true,
        "rejectionReason": null,
        "reviewedAt": null,
        "reviewedBy": null,
        "createdAt": "2024-10-19T10:00:00Z",
        "updatedAt": "2024-10-19T10:00:00Z"
      },
      {
        "id": 2,
        "studentUserId": 202,
        "student": {
          "userId": 202,
          "fullName": "Le Van C",
          "rollNumber": "HE180315",
          "email": "levanc@fpt.edu.vn",
          "majorName": "Software Engineering"
        },
        "submissionType": "update",
        "status": "pending",
        "hasVideo": true,
        "hasFacePhoto": false,
        "rejectionReason": null,
        "reviewedAt": null,
        "reviewedBy": null,
        "createdAt": "2024-10-19T11:00:00Z",
        "updatedAt": "2024-10-19T11:00:00Z"
      }
    ],
    "totalPages": 3,
    "currentPage": 1,
    "pageSize": 10,
    "totalItems": 25
  }
}

Response Schema (items):
| Field           | Type   | Description
|-----------------|--------|-----------
| id              | integer| Submission ID
| studentUserId   | integer| Student user ID
| student         | object | Student details with major
| submissionType  | string | initial, update
| status          | string | pending, approved, rejected
| hasVideo        | boolean| Whether face video exists
| hasFacePhoto    | boolean| Whether face photo exists
| rejectionReason | string | Reason for rejection (null if not rejected)
| reviewedAt      | string | YYYY-MM-DDTHH:mm:SSZ (null if not reviewed)
| reviewedBy      | object | Data Operator who reviewed (null if not reviewed)
| createdAt       | string | YYYY-MM-DDTHH:mm:SSZ
| updatedAt       | string | YYYY-MM-DDTHH:mm:SSZ

400-Invalid query parameters:
{
  "status": 400,
  "message": "Page must be >= 1 / Invalid status value",
  "code": "INVALID_PAGE" | "INVALID_PAGE_SIZE" | "INVALID_SORT" | "INVALID_STATUS"
}

=======================================================================================================================
========================================== Get identity submission details =============================================

3. GET /api/v1/identity-submissions/{id}
Permission: IDENTITY_SUBMISSION_READ_DETAIL
Description: Get detailed information about an identity submission. If it's an 'update' request, also includes the previously approved asset for comparison.

Path Parameters:
| Parameter | Type    | Required | Description
| id        | integer | Yes      | Submission ID

200-Success Response (cho một đơn 'update'):
{
  "status": 200,
  "data": {
    "id": 2,
    "studentUserId": 201,
    "student": {
      "userId": 201,
      "fullName": "Tran Thi B",
      "rollNumber": "HE180314",
      "email": "tranthib@fpt.edu.vn",
      "majorName": "Software Engineering",
      "majorCode": "SE"
    },
    "submissionType": "update",
    "status": "pending",
    "assets": [
      {
        "id": 3,
        "assetType": "face_photo",
        "storageUrl": "/uploads/identity/201/1729339200_face_photo.jpg",
        "viewUrl": "/api/v1/files/identity/201/1729339200_face_photo.jpg",
        "isActive": true,
        "createdAt": "2024-10-19T10:00:00Z"
      },
      {
        "id": 4,
        "assetType": "face_video",
        "storageUrl": "/uploads/identity/201/1729339200_face_video.mp4",
        "viewUrl": "/api/v1/files/identity/201/1729339200_face_video.mp4",
        "isActive": true,
        "createdAt": "2024-10-19T10:00:00Z"
      }
    ],
    "previousApprovedAsset": {
      "assetType": "face_photo",
      "viewUrl": "/api/v1/files/identity/201/old_face_photo.jpg",
      "createdAt": "2024-09-15T12:00:00Z"
    },
    "currentEmbedding": null,
    "rejectionReason": null,
    "reviewedAt": null,
    "reviewedBy": null,
    "createdAt": "2024-10-19T10:00:00Z",
    "updatedAt": "2024-10-19T10:00:00Z",
    "version": 1
  }
}

Response Schema:
| Field                 | Type   | Description
|-----------------------|--------|-----------
| id                    | integer| Submission ID
| studentUserId         | integer| Student user ID
| student               | object | Student details with major
| submissionType        | string | initial, update
| status                | string | pending, approved, rejected
| assets                | array  | List of newly uploaded files (face_photo, face_video)
| previousApprovedAsset | object | Details of the previously approved asset (null if this is an initial submission).
|                       |        |   - assetType (string)
|                       |        |   - viewUrl (string)
|                       |        |   - createdAt (string)
| currentEmbedding      | object | Current active embedding info (null if no embedding yet)
| rejectionReason       | string | Reason for rejection (null if not rejected)
| reviewedAt            | string | YYYY-MM-DDTHH:mm:SSZ (null if not reviewed)
| reviewedBy            | object | Data Operator who reviewed (null if not reviewed)
| createdAt             | string | YYYY-MM-DDTHH:mm:SSZ
| updatedAt             | string | YYYY-MM-DDTHH:mm:SSZ
| version               | integer| Version for optimistic locking

Asset Object Schema:
| Field      | Type   | Description
|------------|--------|-----------
| id         | integer| Asset ID
| assetType  | string | face_photo, face_video
| storageUrl | string | File path on server (for internal use)
| viewUrl    | string | URL for viewing/downloading file (for frontend)
| isActive   | boolean| Asset status
| createdAt  | string | YYYY-MM-DDTHH:mm:SSZ

400-Invalid field type:
{
  "status": 400,
  "message": "Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'",
  "code": "INVALID_FIELD_TYPE"
}

404-Submission not found:
{
  "status": 404,
  "message": "Identity submission not found: 1",
  "code": "IDENTITY_SUBMISSION_NOT_FOUND"
}

=======================================================================================================================
=========================================== Approve identity submission ===============================================

4. PUT /api/v1/identity-submissions/{id}/approve
Permission: IDENTITY_SUBMISSION_APPROVE
Description: Approve identity submission. Triggers Python service to generate face embedding. Uses optimistic locking to prevent concurrent approvals.

Path Parameters:
| Parameter | Type    | Required | Description
| id        | integer | Yes      | Submission ID

Request Body:
{
  "version": 1
}

Request Schema:
| Field   | Type    | Required | Validation
|---------|---------|----------|-----------
| version | integer | Yes      | Must match current submission version (optimistic locking)

Business Rules:
- BR-09: Manual approval required
- BR-32: Generate new embedding with incremented version
- Submission must be in 'pending' status
- Call Python service: POST /api/v1/embeddings/generate
- If Python fails: rollback approval (Q2)
- Update status = 'approved', reviewed_at, reviewed_by_user_id
- If submission_type = 'update': deactivate old embedding (is_active = false)
- Activate new embedding (is_active = true)
- Create audit log

Processing Flow:
1. Validate: submission exists, status = 'pending', version matches
2. Call Python service to generate embedding
3. If Python success:
   - Save embedding to face_embeddings table
   - Update submission: status = 'approved', reviewed_at = now(), reviewed_by_user_id = current_user
   - If update: deactivate old embedding
   - Activate new embedding
   - Create audit log
   - Return 200 OK
4. If Python fails:
   - Rollback: submission remains 'pending'
   - Return 500 error with Python error message

200-Success Response:
{
  "status": 200,
  "message": "Identity submission approved successfully. Face embedding generated.",
  "data": {
    "id": 1,
    "studentUserId": 201,
    "student": {
      "userId": 201,
      "fullName": "Tran Thi B",
      "rollNumber": "HE180314",
      "email": "tranthib@fpt.edu.vn"
    },
    "submissionType": "initial",
    "status": "approved",
    "embedding": {
      "id": 1,
      "version": 1,
      "isActive": true,
      "createdAt": "2024-10-19T10:30:00Z"
    },
    "rejectionReason": null,
    "reviewedAt": "2024-10-19T10:30:00Z",
    "reviewedBy": {
      "userId": 100,
      "fullName": "Data Operator A"
    },
    "createdAt": "2024-10-19T10:00:00Z",
    "updatedAt": "2024-10-19T10:30:00Z",
    "version": 2
  }
}

400-Fields required:
{
  "status": 400,
  "message": "Version is required for optimistic locking",
  "code": "VERSION_REQUIRED"
}

400-Invalid field type:
{
  "status": 400,
  "message": "Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'",
  "code": "INVALID_FIELD_TYPE"
}

400-Invalid status:
{
  "status": 400,
  "message": "Cannot approve submission. Current status is 'approved'. Only 'pending' submissions can be approved.",
  "code": "INVALID_SUBMISSION_STATUS"
}

404-Submission not found:
{
  "status": 404,
  "message": "Identity submission not found: 1",
  "code": "IDENTITY_SUBMISSION_NOT_FOUND"
}

409-Version mismatch (optimistic locking):
{
  "status": 409,
  "message": "Submission has been modified by another user. Please refresh and try again.",
  "code": "VERSION_MISMATCH"
}

500-Python service failed:
{
  "status": 500,
  "message": "Failed to generate face embedding. Python service error: Connection timeout",
  "code": "EMBEDDING_GENERATION_FAILED"
}

400-Malformed JSON:
{
  "status": 400,
  "message": "Malformed JSON request",
  "code": "MALFORMED_JSON"
}

=======================================================================================================================
============================================ Reject identity submission =============================================

5. PUT /api/v1/identity-submissions/{id}/reject
Permission: IDENTITY_SUBMISSION_REJECT
Description: Reject identity submission with reason. Sends notification to student (BR-11). Uses optimistic locking.

Path Parameters:
| Parameter | Type    | Required | Description
| id        | integer | Yes      | Submission ID

Request Body:
{
  "rejectionReason": "Face video quality is too low. Please record in better lighting.",
  "version": 1
}

Request Schema:
| Field           | Type    | Required | Validation
|-----------------|---------|----------|-----------
| rejectionReason | string  | Yes      | Not blank, max 500 chars
| version         | integer | Yes      | Must match current submission version (optimistic locking)

Business Rules:
- BR-11: System automatically sends notification to student with rejection reason
- Submission must be in 'pending' status
- Update status = 'rejected', rejection_reason, reviewed_at, reviewed_by_user_id
- Create system notification for student
- Create audit log

200-Success Response:
{
  "status": 200,
  "message": "Identity submission rejected. Notification sent to student.",
  "data": {
    "id": 1,
    "studentUserId": 201,
    "student": {
      "userId": 201,
      "fullName": "Tran Thi B",
      "rollNumber": "HE180314",
      "email": "tranthib@fpt.edu.vn"
    },
    "submissionType": "initial",
    "status": "rejected",
    "rejectionReason": "Face video quality is too low. Please record in better lighting.",
    "reviewedAt": "2024-10-19T10:30:00Z",
    "reviewedBy": {
      "userId": 100,
      "fullName": "Data Operator A"
    },
    "createdAt": "2024-10-19T10:00:00Z",
    "updatedAt": "2024-10-19T10:30:00Z",
    "version": 2
  }
}

400-Fields required:
{
  "status": 400,
  "message": "Rejection reason is required / Version is required",
  "code": "REJECTION_REASON_REQUIRED" | "VERSION_REQUIRED"
}

400-Empty rejection reason:
{
  "status": 400,
  "message": "Rejection reason must not be blank",
  "code": "REJECTION_REASON_CANNOT_BE_EMPTY"
}

400-Invalid field type:
{
  "status": 400,
  "message": "Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'",
  "code": "INVALID_FIELD_TYPE"
}

400-Invalid status:
{
  "status": 400,
  "message": "Cannot reject submission. Current status is 'rejected'. Only 'pending' submissions can be rejected.",
  "code": "INVALID_SUBMISSION_STATUS"
}

404-Submission not found:
{
  "status": 404,
  "message": "Identity submission not found: 1",
  "code": "IDENTITY_SUBMISSION_NOT_FOUND"
}

409-Version mismatch (optimistic locking):
{
  "status": 409,
  "message": "Submission has been modified by another user. Please refresh and try again.",
  "code": "VERSION_MISMATCH"
}

400-Malformed JSON:
{
  "status": 400,
  "message": "Malformed JSON request",
  "code": "MALFORMED_JSON"
}

=======================================================================================================================
=========================================== Get my identity submissions ===============================================

6. GET /api/v1/identity-submissions/my-submissions
Permission: OWN_IDENTITY_SUBMIT
Description: Student views their own identity submissions history. Shows all submissions (pending, approved, rejected).

Query Parameters:
| Parameter | Type    | Required | Default   | Validation 
| page      | integer | No       | 1         | >= 1
| pageSize  | integer | No       | 10        | 1-50 
| sort      | string  | No       | desc      | asc, desc 
| sortBy    | string  | No       | createdAt | createdAt, updatedAt, reviewedAt
| status    | string  | No       | all       | pending, approved, rejected, all

200-Success Response:
{
  "status": 200,
  "data": {
    "items": [
      {
        "id": 2,
        "submissionType": "update",
        "status": "pending",
        "hasVideo": true,
        "hasFacePhoto": false,
        "rejectionReason": null,
        "reviewedAt": null,
        "createdAt": "2024-10-19T11:00:00Z",
        "updatedAt": "2024-10-19T11:00:00Z"
      },
      {
        "id": 1,
        "submissionType": "initial",
        "status": "approved",
        "hasVideo": true,
        "hasFacePhoto": true,
        "rejectionReason": null,
        "reviewedAt": "2024-10-18T14:30:00Z",
        "createdAt": "2024-10-18T10:00:00Z",
        "updatedAt": "2024-10-18T14:30:00Z"
      }
    ],
    "totalPages": 1,
    "currentPage": 1,
    "pageSize": 10,
    "totalItems": 2
  }
}

Response Schema (items):
| Field           | Type   | Description
|-----------------|--------|-----------
| id              | integer| Submission ID
| submissionType  | string | initial, update
| status          | string | pending, approved, rejected
| hasVideo        | boolean| Whether face video exists
| hasFacePhoto    | boolean| Whether face photo exists
| rejectionReason | string | Reason for rejection (null if not rejected)
| reviewedAt      | string | YYYY-MM-DDTHH:mm:SSZ (null if not reviewed)
| createdAt       | string | YYYY-MM-DDTHH:mm:SSZ
| updatedAt       | string | YYYY-MM-DDTHH:mm:SSZ

400-Invalid query parameters:
{
  "status": 400,
  "message": "Page must be >= 1 / Invalid status value",
  "code": "INVALID_PAGE" | "INVALID_PAGE_SIZE" | "INVALID_SORT" | "INVALID_STATUS"
}

=======================================================================================================================
======================================================= Notes =========================================================

Data Types:
- Submission ID: Integer
- Student User ID: Integer
- Asset ID: Integer
- Embedding ID: Integer
- All timestamps: ISO 8601 format (UTC): YYYY-MM-DDTHH:mm:SSZ

Submission Status Values:
- pending: Waiting for Data Operator review
- approved: Approved by Data Operator, embedding generated
- rejected: Rejected by Data Operator with reason

Submission Type Values:
- initial: First-time identity registration (requires face photo + face video)
- update: Identity update request (requires face photo + face video)

Asset Type Values:
- face_photo: Static face photo for visual comparison
- face_video: Face video file for recognition

File Storage:
- Location: Local filesystem (backend server)
- Path pattern: /uploads/identity/{student_id}/{timestamp}_{filename}
- View URL: /api/v1/files/identity/{student_id}/{filename}
- Future: Can migrate to S3/GCS without changing API contract

File Size Limits:
- Face photo: max 5MB
- Face video: max 50MB

File Format Validation:
- Face photo: JPG, PNG (image/jpeg, image/png)
- Face video: MP4, MOV, AVI (video/mp4, video/quicktime, video/x-msvideo)

Optimistic Locking (Q6):
- Version field in identity_submissions table
- Incremented on every update
- Approve/Reject requires version in request body
- If version mismatch → 409 Conflict
- Prevents concurrent approve/reject by multiple Data Operators

Python Service Integration:
- Endpoint: POST /api/v1/embeddings/generate
- Called when submission is approved
- Input: { "videoUrl": "...", "submissionId": 1 }
- Output: { "embeddingVector": [...], "quality": 0.95 }
- If fails: rollback approval, return 500 error (Q2)

Face Embedding Version Management (BR-32):
- Each approved submission generates new embedding
- version = max(version) + 1 for student
- Initial: version = 1
- Update: version = 2, 3, 4, ...
- Only ONE embedding active per student (is_active = true)
- When new approved: old embedding set to is_active = false
- Keep last 3 versions for audit/rollback

Multiple Pending Submissions (Q1):
- Only 1 pending submission allowed per student
- If pending exists: 409 Conflict
- Student must wait for review before submitting again
- After approved/rejected: can submit new one

Submission History Visibility (Q4):
- Students can view ALL their submissions (pending, approved, rejected)
- Sorted by createdAt DESC (newest first)
- Includes rejection reasons for transparency

Notification on Rejection (BR-11):
- System automatically creates notification when submission rejected
- Notification type: 'identity_rejected'
- Includes rejection_reason in notification content
- Appears in student's notification inbox

Permissions:
- OWN_IDENTITY_SUBMIT: Submit and view own submissions (Student)
- IDENTITY_SUBMISSION_READ_QUEUE: View all submissions queue (Data Operator)
- IDENTITY_SUBMISSION_READ_DETAIL: View submission details (Data Operator)
- IDENTITY_SUBMISSION_APPROVE: Approve submissions (Data Operator)
- IDENTITY_SUBMISSION_REJECT: Reject submissions (Data Operator)

Business Rules:
- BR-09: Manual Identity Approval
- BR-10: Pending Identity Update Handling
- BR-11: Identity Rejection Notification
- BR-32: Face Embedding Version Management

Related Use Cases:
- UC-12: Initiate Identity Registration (Student)
- UC-13: Request Identity Update (Student)
- UC-39: View Pending Identity Submissions (Data Operator)
- UC-40: Approve Identity Submission (Data Operator)
- UC-41: Reject Identity Submission (Data Operator)

Audit Trail:
- All approve/reject actions logged to operational_audit_logs
- Includes: actor_user_id, action_type, target_entity, target_id, changes (before/after)
- Tracks: who approved/rejected, when, version changes

Common Status Codes:
- 200: Success
- 201: Created
- 400: Bad Request (validation errors, invalid parameters, file format/size)
- 401: Unauthorized (missing or invalid token)
- 403: Forbidden (insufficient permissions)
- 404: Not Found (submission not found)
- 409: Conflict (pending submission exists, version mismatch)
- 500: Internal Server Error (file upload failed, Python service failed)
